server:
  port: 8081

spring:
  profiles:
    active: test
  application:
    name: shardingjdbc-example2
  #shardingjdbc主要配置 使用druid连接池
  shardingsphere:
    # 是否启用sharding
    enabled: true
    datasource:
      names: master #数据源名称，多个以逗号隔开
      master:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/sharding?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai
        username: root
        password: admini
    props:
      #　是否显示sql
      sql-show: true
    sharding:
      tables:
        # 分表，逻辑表名
        student:
          # 雪花算法生成ID，配置workId
          key-generator:
            type: SNOWFLAKE
            column: id
            props:
              worker:
                id: 1
          # 指定product_order表的数据分布情况，配置数据节点,行表达式标识符使用 ${...} 或 $->{...}，但前者与 Spring 本身的文件占位符冲突，所以在 Spring 环境中建议使用 $->{...}
          actual-data-nodes: master.student,master.student_$->{0..1}
          table-strategy: # 配置分表策略
            inline:
              sharding-column: user_id # 分片列名称
              algorithm-expression: student_$->{user_id % 2}


mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.xh.shardingjdbc.example.model
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: auto
      logic-delete-field: deleted
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)


## 日志配置
logging:
  # 默认加载resources文件夹下的logback-spring.xml 文件
  config: classpath:logback-spring.xml
  level:
    root: INFO